apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      scheduler.alpha.kubernetes.io/critical-pod: ""
    creationTimestamp: "2020-08-04T01:43:06Z"
    generateName: fluentd-gcp-v2.0-
    labels:
      controller-revision-hash: d6cd8f8b5
      k8s-app: fluentd-gcp
      kubernetes.io/cluster-service: "true"
      pod-template-generation: "1"
      version: v2.0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:scheduler.alpha.kubernetes.io/critical-pod: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:k8s-app: {}
            f:kubernetes.io/cluster-service: {}
            f:pod-template-generation: {}
            f:version: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d2829549-e3fa-40e3-995d-b20c9e6777b8"}:
              .: {}
              f:apiVersion: {}
              f:blockOwnerDeletion: {}
              f:controller: {}
              f:kind: {}
              f:name: {}
              f:uid: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution:
                .: {}
                f:nodeSelectorTerms: {}
          f:containers:
            k:{"name":"fluentd-gcp"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"FLUENTD_ARGS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/fluent/config.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/docker/containers"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector:
            .: {}
            f:beta.kubernetes.io/fluentd-ds-ready: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"config-volume"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"libsystemddir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"varlibdockercontainers"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"varlog"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2020-08-04T01:43:06Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.244.0.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2020-08-04T04:47:42Z"
    name: fluentd-gcp-v2.0-x4mgs
    namespace: efk
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: fluentd-gcp-v2.0
      uid: d2829549-e3fa-40e3-995d-b20c9e6777b8
    resourceVersion: "51449"
    selfLink: /api/v1/namespaces/efk/pods/fluentd-gcp-v2.0-x4mgs
    uid: 93d3b5a5-25a4-43f5-ba3e-53f57c9ba03f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-nodepool1-38342630-vmss000001
    containers:
    - command:
      - /bin/sh
      - -c
      - /run.sh $FLUENTD_ARGS 2>&1 >>/var/log/fluentd.log
      env:
      - name: FLUENTD_ARGS
        value: --no-supervisor
      image: k8s.gcr.io/fluentd-gcp:2.0.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/sh
          - -c
          - |
            LIVENESS_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-300}; STUCK_THRESHOLD_SECONDS=${LIVENESS_THRESHOLD_SECONDS:-900}; if [ ! -e /var/log/fluentd-buffers ]; then
              exit 1;
            fi; LAST_MODIFIED_DATE=`stat /var/log/fluentd-buffers | grep Modify | sed -r "s/Modify: (.*)/\1/"`; LAST_MODIFIED_TIMESTAMP=`date -d "$LAST_MODIFIED_DATE" +%s`; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $STUCK_THRESHOLD_SECONDS` ]; then
              rm -rf /var/log/fluentd-buffers;
              exit 1;
            fi; if [ `date +%s` -gt `expr $LAST_MODIFIED_TIMESTAMP + $LIVENESS_THRESHOLD_SECONDS` ]; then
              exit 1;
            fi;
        failureThreshold: 3
        initialDelaySeconds: 600
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 1
      name: fluentd-gcp
      resources:
        limits:
          memory: 300Mi
        requests:
          cpu: 100m
          memory: 200Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: varlog
      - mountPath: /var/lib/docker/containers
        name: varlibdockercontainers
        readOnly: true
      - mountPath: /host/lib
        name: libsystemddir
        readOnly: true
      - mountPath: /etc/fluent/config.d
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-xwcb2
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-nodepool1-38342630-vmss000001
    nodeSelector:
      beta.kubernetes.io/fluentd-ds-ready: "true"
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node.alpha.kubernetes.io/ismaster
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/disk-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/pid-pressure
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/unschedulable
      operator: Exists
    volumes:
    - hostPath:
        path: /var/log
        type: ""
      name: varlog
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: varlibdockercontainers
    - hostPath:
        path: /usr/lib64
        type: ""
      name: libsystemddir
    - configMap:
        defaultMode: 420
        name: fluentd-gcp-config
      name: config-volume
    - name: default-token-xwcb2
      secret:
        defaultMode: 420
        secretName: default-token-xwcb2
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-08-04T01:43:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-08-04T04:37:11Z"
      message: 'containers with unready status: [fluentd-gcp]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-08-04T04:37:11Z"
      message: 'containers with unready status: [fluentd-gcp]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-08-04T01:43:06Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ea218b9f920c93048f9ee04f1fe35de79f50a68118ee7c2c1e827a55ddfb6e6c
      image: k8s.gcr.io/fluentd-gcp:2.0.2
      imageID: docker-pullable://k8s.gcr.io/fluentd-gcp@sha256:e2982f8860cba6a9ef044b70183e9de5e09cd40b3bdb4020bb22e7accaea720b
      lastState:
        terminated:
          containerID: docker://ea218b9f920c93048f9ee04f1fe35de79f50a68118ee7c2c1e827a55ddfb6e6c
          exitCode: 1
          finishedAt: "2020-08-04T04:47:28Z"
          reason: Error
          startedAt: "2020-08-04T04:47:28Z"
      name: fluentd-gcp
      ready: false
      restartCount: 41
      started: false
      state:
        waiting:
          message: back-off 5m0s restarting failed container=fluentd-gcp pod=fluentd-gcp-v2.0-x4mgs_efk(93d3b5a5-25a4-43f5-ba3e-53f57c9ba03f)
          reason: CrashLoopBackOff
    hostIP: 10.240.0.5
    phase: Running
    podIP: 10.244.0.8
    podIPs:
    - ip: 10.244.0.8
    qosClass: Burstable
    startTime: "2020-08-04T01:43:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2020-08-04T04:45:02Z"
    labels:
      run: nginx
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:run: {}
        f:spec:
          f:containers:
            k:{"name":"nginx"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
      manager: kubectl
      operation: Update
      time: "2020-08-04T04:46:27Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.244.1.5"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      time: "2020-08-04T04:46:28Z"
    name: nginx
    namespace: efk
    resourceVersion: "51270"
    selfLink: /api/v1/namespaces/efk/pods/nginx
    uid: f712eb37-372a-422f-a644-1c1e63b8bd3b
  spec:
    containers:
    - image: nginx:latest
      imagePullPolicy: IfNotPresent
      name: nginx
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: default-token-xwcb2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-nodepool1-38342630-vmss000002
    priority: 0
    restartPolicy: Never
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: default-token-xwcb2
      secret:
        defaultMode: 420
        secretName: default-token-xwcb2
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2020-08-04T04:45:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2020-08-04T04:45:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2020-08-04T04:45:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2020-08-04T04:45:02Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: docker://ebb1bd8d505d1a4ef2cdde768957fc95e8b492001fb2c24d358229bc814126bd
      image: nginx:latest
      imageID: docker-pullable://nginx@sha256:0632aa5183f266cf1b7272ab120f3fb7fe06fae6bf74a734de51590a6ef44cbe
      lastState:
        terminated:
          containerID: docker://adaffa5647aa426d088e01a14df8fbce3c1056927592e6c72ab101d449ce4b14
          exitCode: 0
          finishedAt: "2020-08-04T04:46:27Z"
          reason: Completed
          startedAt: "2020-08-04T04:45:40Z"
      name: nginx
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2020-08-04T04:46:27Z"
    hostIP: 10.240.0.6
    phase: Running
    podIP: 10.244.1.5
    podIPs:
    - ip: 10.244.1.5
    qosClass: BestEffort
    startTime: "2020-08-04T04:45:02Z"
kind: List
metadata:
  resourceVersion: ""
  selfLink: ""
